{% liquid 
  assign remainder = section.blocks.size | modulo: 2

  if remainder == 1
    assign half = section.blocks.size | minus: 1 | divided_by: 2
  else
    assign half = section.blocks.size | divide_by: 2
  endif

  assign second_col_start = half | plus: 1
  assign second_col_end = section.blocks.size | minus: 1
%}

<link rel="stylesheet" href="{{ 'section-product-faqs.css' | asset_url }}" media="print" onload="this.media='all'">

<noscript>{{ 'section-product-faqs.css' | asset_url | stylesheet_tag }}</noscript>

<div id="product-faqs--{{ section.id }}" class="product-faqs">
  <h3 class="h3">{{ section.settings.heading }}</h3>
  <div class="product-faqs__columns">
    <ul>
      {% for col1_block in (0..half) %}
        <li class="faq-item">
          <button class="faq-accordion-toggle" onclick="productFaqToggle(this)">
            {{ section.blocks[col1_block].settings.question }}
          </button>
          <div class="faq-accordion-content" aria-expanded="false">
            {{ section.blocks[col1_block].settings.answer }}
          </div>
        </li>
      {% endfor %}
    </ul>
    <ul>
      {% for col2_block in (second_col_start..second_col_end) %}
        <li class="faq-item">
          <button class="faq-accordion-toggle" onclick="productFaqToggle(this)">
            {{ section.blocks[col2_block].settings.question }}
          </button>
          <div class="faq-accordion-content" aria-expanded="false">
            {{ section.blocks[col2_block].settings.answer }}
          </div>
        </li>
      {% endfor %}
    </ul>
  </div>
</div>

<style>
#product-faqs--{{ section.id }} {
  background-color: {{ section.settings.bg_color }};
}
#product-faqs--{{ section.id }} .faq-item.active .faq-accordion-toggle {
  background-color: {{ section.settings.faq_bg_color }}
}
</style>

<script>
  function productFaqToggle(el) {
    const content = el.parentNode.querySelector('.faq-accordion-content') 
    if(content.getAttribute('aria-expanded') === true) {
      content.style.maxHeight = '0'
      content.setAttribute('aria-expanded', false)
      el.style.backgroundColor = "#fff"
      return
    }

    el.closest('ul').querySelectorAll('.faq-item').forEach(item => {
      if(el === item.querySelector('.faq-accordion-toggle')) {
        content.style.maxHeight = '1000px'
        content.setAttribute('aria-expanded', true)
        el.style.backgroundColor = "{{ section.settings.faq_bg_color }}"
      }
    })
  }
</script>

{% schema %}
{
  "name": "Product FAQs",
  "tag": "section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Background Color"
    },
    {
      "type": "color",
      "id": "faq_bg_color",
      "label": "FAQ Item Active Background Color"
    }
  ],
  "blocks": [
    {
      "type": "faq",
      "name": "FAQ Item",
      "settings": [
        {
          "type": "text",
          "id": "question",
          "label": "Question"
        },
        {
          "type": "text",
          "id": "answer",
          "label": "Answer"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product FAQs"
    }
  ]
}
{% endschema %}
